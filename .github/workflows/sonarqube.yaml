name: SonarQube Code Analysis

env:
  SONAR_HOST_URL: 'http://sonarqube-sonarqube.sonarqube:9000'

on:
  workflow_dispatch:
#  push:
#    branches: [ main, develop ]
#  pull_request:
#    branches: [ main, develop ]
  

jobs:
  sonarqube:
    runs-on: ubuntu-homelab
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

#    # Setup Node.js for Frontend
#    - name: Setup Node.js
#      uses: actions/setup-node@v4
#      with:
#        node-version: '22'
#        cache: 'npm'
#        cache-dependency-path: frontend/package-lock.json
#
#    # Setup Go for Backend
#    - name: Setup Go
#      uses: actions/setup-go@v5
#      with:
#        go-version: '1.23.6'
#
#    # Install Frontend Dependencies
#    - name: Install Frontend Dependencies
#      working-directory: ./frontend
#      run: npm ci
#
#    # Build Frontend (optional, for dependency validation)
#    - name: Build Frontend
#      working-directory: ./frontend
#      run: npm run build
#
#    # Download Go dependencies for validation
#    - name: Download Go Dependencies
#      working-directory: ./backend
#      run: go mod download

    - name: SonarQube Scanner
      uses: sonarsource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}

    # Quality Gate Check
#    - name: SonarQube Quality Gate check
#      id: sonarqube-quality-gate-check
#      uses: sonarsource/sonarqube-quality-gate-action@master
#      timeout-minutes: 5
#      env:
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#
#    # Optional: Fail the job if Quality Gate fails
#    - name: "Quality Gate Status"
#      run: |
#        echo "Quality Gate Status: ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
#        if [ "${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}" != "PASSED" ]; then
#          echo "Quality Gate failed!"
#          exit 1
#        fi
